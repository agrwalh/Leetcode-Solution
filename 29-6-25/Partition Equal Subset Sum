class Solution {
  public:
    int SubsetSum(vector<int>& arr, int sum) {
        int n = arr.size();
        bool t[n + 1][sum + 1];

        // Initialization
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= sum; j++) {
                if (i == 0)
                    t[i][j] = false; 
                if (j == 0)
                    t[i][j] = true;  
            }
        }


        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= sum; j++) {
                if (arr[i - 1] <= j) {
                    t[i][j] = t[i - 1][j] || t[i - 1][j - arr[i - 1]];
                } else {
                    t[i][j] = t[i - 1][j];
                }
            }
        }

        return t[n][sum];
    }
    bool equalPartition(vector<int>& arr) {
        // code here
        int sum=0;
        for(int i=0;i<arr.size();i++)
        {
            sum+=arr[i];
            
        }
        if(sum%2!=0){
            return false;
        }
        else{
            return SubsetSum(arr,sum/2);
        }
        
    }
};
