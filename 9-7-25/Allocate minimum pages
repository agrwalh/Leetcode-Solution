class Solution {
  public:
  
  
    bool isPossible(const vector<int>& arr, int k, int maxPages) {
        int student=1;
        int sum=0;
        for(int pages:arr){
            if(pages>maxPages) return false;
            if(sum+pages<=maxPages){
            sum+=pages;
            }
            
            else{
            student++;
            sum=pages;
            }
            
            if(student>k) return false;
        }
        return true;
        
    }
        
    int findPages(vector<int> &arr, int k) {
        // code here
        int n =arr.size();
        if (k>n) return -1;
        
        int low = *max_element(arr.begin(), arr.end());
        int high = accumulate(arr.begin(), arr.end(), 0);
        int result = -1;
        while(low<=high){
            int mid=(low+high)/2;
            if(isPossible(arr,k,mid)){
            result=mid;
            high=mid-1;
            
        }
        else
        {
        low=mid+1;
        }
    }
        return result;

        
    }
};
