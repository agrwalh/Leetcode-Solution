class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) 
    {
        int total=accumulate(nums.begin(),nums.end(),0);
        if((total+target)%2!=0 || total<abs(target))
        return 0;
        int sum=(total+target)/2; 
        int n = nums.size();
        int mod = 1e9 + 7;
        vector<vector<int>> dp(n + 1, vector<int>(sum + 1, 0));
        for (int i = 0; i <= n; i++)
            dp[i][0] = 1;
        for (int i=1;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(nums[i-1]<=j)
                dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i-1]];
            else
                dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][sum];
        
    }
};
